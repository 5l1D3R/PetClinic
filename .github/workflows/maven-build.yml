# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
       
          
      - uses: cschleiden/replace-tokens@v1
        with:
          files: 'settings.xml'
        env:
            JF_SETTINGS_EMAIL: ${{ secrets.JF_SETTINGS_EMAIL }}
            JF_SETTINGS_PWD: ${{ secrets.JF_SETTINGS_PWD }}
            
      - name: Build with Maven Wrapper
       #Force redowloading lib from Jfrog 
        run: ./mvnw package dependency:purge-local-repository -s "./settings.xml" -DskipTests=true 
       #run: ./mvnw package -DskipTests=true   
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ vars.JF_URL }}

          # JFrog Platform access token
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Run JFrog CLI
        run: |
          # Ping the server
          jf rt ping
          # run SAST/SCA/IAC/SECRET scan on the project
          jf audit --mvn --watches "Security_watch_1"
          # run scan on the binary
          jf s "./target/*.jar"
          # Collect environment variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          #Upload to Artifactory the binary generated
          jf rt upload "./target/*.jar" petclinic-libs-snapshot-local --build-name PetClinic --build-number ${GITHUB_RUN_NUMBER}
          # Publish build info
          jf rt bp
        continue-on-error: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Jfrog 
        uses: docker/login-action@v3
        with:
          registry: https://gdoma.jfrog.io
          username: ${{ secrets.JF_USER }}
          password: ${{ secrets.JF_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: gdoma.jfrog.io/petclinic-app/peclinic-app:latest