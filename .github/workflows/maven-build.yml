# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main, jfrog_assignment ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: 'amazoncorretto'
          cache: maven

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compile the code
        run: ./mvnw -B package -D skipTests
      - name: Run the tests
        run: ./mvnw test

      - name: Package the project as a runnable Docker image
        run: docker buildx build --platform linux/arm64,linux/amd64 --load -t my_repo/jfrog_assignment:${{ github.sha }} .
      - name: Scan the project with your preferred SCA tool
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'my_repo/jfrog_assignment:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-results.sarif
          path: trivy-results.sarif
      