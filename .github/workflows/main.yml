name: Java CI/CD with Maven and Azure Spring Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  ASC_PACKAGE_PATH: ${{ github.workspace }}
  AZURE_SUBSCRIPTION: 'Azure-Sprint-Prod'
  DEV_APP_NAME: 'pet-clinic-1'
  DEV_APP_SERVICE: 'ossonazure-javaspring-host-dev'

jobs:
  build_test_and_package:
    runs-on: ubuntu-latest
    
    name: Build, Test, and Package application for deployment
    
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        name: 'Set JDK version'
        with:
          distribution: 'microsoft'
          java-version: '17'
          
      - name: Run Maven clean and package (build)
        run: |
          mvn clean package -DskipTests
          
      - name: Run the tests via Maven
        run: |
          mvn test
          
      - name: Publish test results
        uses: ScaCap/action-surefire-report@v1.0.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: pet-clinic
          path: ${{ github.workspace }}/target/*.jar
          if-no-files-found: error
          
  deploy_to_dev:
    runs-on: ubuntu-latest
    
    name: Deploy to Dev environment
    
    # Only run on pushes to the "main" branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: pet-clinic

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SP_GITHUBACTIONS_WORKFLOW_PETCLINIC_APP_DEV_RESOURCE_GROUP }}

      - name: deploy to production with artifact
        uses: azure/spring-cloud-deploy@v1
        with:
          azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
          action: Deploy
          service-name: <service instance name>
          app-name: <app name>
          use-staging-deployment: false
          package: ${{ env.ASC_PACKAGE_PATH }}/**/*.jar
      
      - name: Azure Spring Cloud
        uses: Azure/spring-cloud-deploy@v1
        with:
          azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
          action: deploy
          service-name: ${{ env.DEV_APP_SERVICE }}
          app-name: ${{ env.DEV_APP_NAME }}
          use-staging-deployment: false
          package: ${{ github.workspace }}/*.jar
          #environment-variables: # optional
